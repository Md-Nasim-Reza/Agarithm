
#include<bits/stdc++.h>
using namespace std;
vector<pair<int,int>>adj[10000];
pair<int,int>pa;
int visit[10000];
int MST(int v){
    priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;
    pq.push({0,v});
    int minsum=0;
    while(!pq.empty()){
        pa = pq.top();
        pq.pop();
      int  x = pa.second;
        if(visit[x]==1)
            continue;
          minsum+=pa.first;
         visit[x] = 1;
        for(int i=0; i<adj[x].size(); i++){
            int child = adj[x][i].first;
            int y = adj[x][i].second;
            if(visit[child]==0){
                pq.push({y,child});
            }
        }
    }
    return  minsum;
}
int main(){
    int i,j,node,edge,a,b,w;
    cin>>node>>edge;
    for(i=0; i<edge; i++){
        cin>>a>>b>>w;
        adj[a].push_back({b,w});
        adj[b].push_back({a,w});
    }
    int src;
    printf("Enter the source node: ");
    cin>>src;
    cout<<MST(src)<<endl;
return  0;

}
